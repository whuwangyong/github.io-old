<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>kafka - 分类 - 武大路飞</title>
    <link>https://whuwangyong.github.io/categories/kafka/</link>
    <description>kafka - 分类 - 武大路飞</description>
    <generator>Hugo -- gohugo.io</generator><managingEditor>whuwangyong@gmail.com (Wang Yong)</managingEditor>
      <webMaster>whuwangyong@gmail.com (Wang Yong)</webMaster><lastBuildDate>Wed, 21 Sep 2022 00:00:00 &#43;0800</lastBuildDate><atom:link href="https://whuwangyong.github.io/categories/kafka/" rel="self" type="application/rss+xml" /><item>
  <title>如何确保kafka topic已经删除</title>
  <link>https://whuwangyong.github.io/2022-09-21-how-to-ensure-kafka-topics-deleted/</link>
  <pubDate>Wed, 21 Sep 2022 00:00:00 &#43;0800</pubDate>
  <author>Wang Yong</author>
  <guid>https://whuwangyong.github.io/2022-09-21-how-to-ensure-kafka-topics-deleted/</guid>
  <description><![CDATA[问题描述 TopicExistsException: Topic &lsquo;xxx&rsquo; is marked for deletion. 在写kafka工具时，有两个方法：批量创建topic和批量删除topic。 运维操作一般是，批量删除一堆topic，然后再重建删除的那些topic。在创建时，可能会遇到如下错误： 1 2 3 4 5 6 7 8 2022-09-19 08:37:55.150 INFO 20376 --- [nio-8080-exec-4] c.w.w.k.service.TopicManagerImpl : input topics num: 100, deleted]]></description>
</item><item>
  <title>在consumer producer运行时停止kafka服务端会怎样</title>
  <link>https://whuwangyong.github.io/2022-09-18-stop-kafka-server-when-consumer-or-producer-running/</link>
  <pubDate>Sun, 18 Sep 2022 00:00:00 &#43;0800</pubDate>
  <author>Wang Yong</author>
  <guid>https://whuwangyong.github.io/2022-09-18-stop-kafka-server-when-consumer-or-producer-running/</guid>
  <description><![CDATA[结论 服务端停止时，客户端程序会报错； 服务端启动后，客户端程序能继续运行。也就是，消费者线程并未异常退出。 实验步骤 （1）停止后，consumer和producer会报错。 消费者： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32]]></description>
</item><item>
  <title>在producer consumer运行时删除topic会怎么样</title>
  <link>https://whuwangyong.github.io/2022-09-18-delete-topic-when-consumer-or-producer-running/</link>
  <pubDate>Sun, 18 Sep 2022 00:00:00 &#43;0800</pubDate>
  <author>Wang Yong</author>
  <guid>https://whuwangyong.github.io/2022-09-18-delete-topic-when-consumer-or-producer-running/</guid>
  <description><![CDATA[broker端有个参数（kafka_2.13-3.2.1/config/server.properties），auto.create.topics.enable，默认为true。意思是，当生产者、消费者读写一个不存在的topic时，是否自动]]></description>
</item><item>
  <title>kafka consumer seek之后立即poll可能拉不到消息</title>
  <link>https://whuwangyong.github.io/2022-02-17-kafka-seek-poll/</link>
  <pubDate>Tue, 31 May 2022 00:00:00 &#43;0800</pubDate>
  <author>Wang Yong</author>
  <guid>https://whuwangyong.github.io/2022-02-17-kafka-seek-poll/</guid>
  <description><![CDATA[问题 有个需求，需要频繁seek到指定partition的指定offset，然后poll，且只poll一次，目的是为了快速将指定offset的消息拉取出来。 通常的poll写法是，将poll逻辑放在死循环里，第一次拉不到，第二次继续。如果off]]></description>
</item><item>
  <title>Kafka事务不完全指南</title>
  <link>https://whuwangyong.github.io/2022-05-30-kafka-tx/</link>
  <pubDate>Mon, 30 May 2022 00:00:00 &#43;0800</pubDate>
  <author>Wang Yong</author>
  <guid>https://whuwangyong.github.io/2022-05-30-kafka-tx/</guid>
  <description><![CDATA[Kafka的事务是什么 生产者往多个topic里面写消息，要么同时成功，要么同时失败。 为什么需要事务 消息系统有3种语义： 最多一次 最少一次 精确一次。Exactly Only Once 为了实现精确一次的语义，Kafka必须引入事务。如下图： 本应用从上游topic]]></description>
</item><item>
  <title>kafka offset为什么不连续</title>
  <link>https://whuwangyong.github.io/2022-05-20-why-kafka-offset-not-sequential/</link>
  <pubDate>Fri, 20 May 2022 00:00:00 &#43;0800</pubDate>
  <author>Wang Yong</author>
  <guid>https://whuwangyong.github.io/2022-05-20-why-kafka-offset-not-sequential/</guid>
  <description><![CDATA[why kafka offset not sequential 未使用事务时，至少一次语义，消息重发时，会占用offset 使用事务时，每次事务的commit/abort，都会往topic（每个分区？）写一个标志，这个标志会占用offset 官方并未提及offset是连续的 Reference [Solved] Kafka Streams does not increment offset by 1 when producing]]></description>
</item><item>
  <title>《Kafka 核心技术与实战》学习笔记</title>
  <link>https://whuwangyong.github.io/2022-03-25-geektime-core-kafka-in-action-notes/</link>
  <pubDate>Fri, 25 Mar 2022 00:00:00 &#43;0800</pubDate>
  <author>Wang Yong</author>
  <guid>https://whuwangyong.github.io/2022-03-25-geektime-core-kafka-in-action-notes/</guid>
  <description><![CDATA[简介 Apach Kafka 是一款分布式流处理框架，用于实时构建流处理应用。它有一个核心的功能广为人知，即作为企业级的消息引擎被广泛使用。 很多主流消息引擎系统都支持 JMS（Java Message Service）规范，比如 ActiveMQ、RabbitMQ、IBM 的 WebSphere MQ 和 Apache]]></description>
</item><item>
  <title>kafka在Windows上无法动态删除topic</title>
  <link>https://whuwangyong.github.io/2022-03-12-can-not-delete-topics-when-kafka-running-on-windows/</link>
  <pubDate>Sat, 12 Mar 2022 00:00:00 &#43;0800</pubDate>
  <author>Wang Yong</author>
  <guid>https://whuwangyong.github.io/2022-03-12-can-not-delete-topics-when-kafka-running-on-windows/</guid>
  <description><![CDATA[问题描述 删除topic时导致集群崩溃，报错： ERROR Shutdown broker because all log dirs in D:\tmp\kafka-logs have failed. 测试了kafka_2.11-1.1.0、kafka_2.13-2.5.0、kafka_2.13-2.6.2、kafka_2.13-2.7.0四个版本，都有这个问题。 搜索了网络]]></description>
</item></channel>
</rss>
