<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 武大路飞</title>
        <link>https://whuwangyong.github.io/posts/</link>
        <description>所有文章 | 武大路飞</description>
        <generator>Hugo -- gohugo.io</generator><managingEditor>whuwangyong@gmail.com (Wang Yong)</managingEditor>
            <webMaster>whuwangyong@gmail.com (Wang Yong)</webMaster><lastBuildDate>Thu, 31 Mar 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://whuwangyong.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Vercel关闭评论 禁止Preview Deployments</title>
    <link>https://whuwangyong.github.io/20220-03-31-vercel-disable-comments-and-preview-deployments/</link>
    <pubDate>Thu, 31 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://whuwangyong.github.io/20220-03-31-vercel-disable-comments-and-preview-deployments/</guid>
    <description><![CDATA[关键字：disable Vercel bot; disable Preview Deployments
Vercel是一个支持部署前端框架和静态网站的平台。你可以方便的把 Github Pages 上面的站点导入Vercel，这样做有两个好处：
 有些地区有些时候，Vercel上面的站点比Github Pages上的访问速度快； Github Pages 屏蔽了百度的爬虫，因此你的博客不能被百度检索到。但 Vercel 是可以的。  使用了一段时间的Vercel，发现有两个地方需要调整。
关闭评论 每次提交后，vercel bot会在该commit下评论：
simage.png
"s
这造成了大量的github通知和邮件通知：
如何关闭？在站点根目录新增vercel.json文件，内容如下：
1 2 3 4 5  { &#34;github&#34;: { &#34;silent&#34;: true } }   禁止Preview Deployments 另一个需要关闭的就是Preview Deployments（与我而言）。我的站点没有预览的必要，都是直接build main分支然后上production。Preview Deployments 构建的是gh-pages分支，可能是我哪里没弄对，这个分支一直无法build成功。如下图，2小时过去了还没结束，然后我手动取消了。
因此，我禁止了Preview Deployments，直允许Production Deployments。操作如下：
Project Settings -&gt; Git -&gt; Ignored Build Step，在 COMMAND 填入 [ &quot;$VERCEL_ENV&quot; != production ]。
​Reference  How do I prevent the Vercel for GitHub integration comments?]]></description>
</item><item>
    <title>Github SubModule 指南</title>
    <link>https://whuwangyong.github.io/2022-03-29-github-submodule/</link>
    <pubDate>Tue, 29 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://whuwangyong.github.io/2022-03-29-github-submodule/</guid>
    <description><![CDATA[最近学习使用 Hugo 构建静态网站。安装主题时，接触到git submodule这个命令，踩了些坑，总结一下。
子模块与父模块如何同步更新 子模块是一个单独的项目，commit push等操作需要在子模块自己的repo目录下操作。父项目的操作与子模块无关。父项目git add无法添加子模块的changes，当然也就无法commit push。
子模块版本升级后，父项目不会自动升级，仍然停留在对之前版本的引用。以下命令可以查看父模块当前使用子模块的哪个版本：
1 2  &gt; git submodule status f0dc1cf84d7c47dc1625e956f07b37b6c238a3dc themes/hugo-theme-stack (v3.8.0-4-gf0dc1cf)   子模块修改后，父模块虽然无法git add/commit/push，但是git status却可以显示：
1 2 3 4 5 6 7 8  &gt; git status On branch master Your branch is up to date with &#39;origin/master&#39;. Changes not staged for commit: (use &#34;git add ...&#34; to update what will be committed) (use &#34;git restore ...&#34; to discard changes in working directory) modified: themes/hugo-theme-stack (new commits)   这里会让人疑惑，有changes，但是无法add进来。]]></description>
</item><item>
    <title>云笔记软件简评</title>
    <link>https://whuwangyong.github.io/2022-03-08-notesapp_benchmark/</link>
    <pubDate>Tue, 29 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://whuwangyong.github.io/2022-03-08-notesapp_benchmark/</guid>
    <description><![CDATA[本文首发V2EX。
这段时间试用了好多笔记软件，我本来就是个选择困难症，一个个试下来，愁死我了。
分享一下我的一些阶段性结论。
有道 缺点：
 编辑器有问题，Ctrl+Home/End无法跳转、table键无法切换单元格、光标移动慢等问题 富文本不能导出md（这是我想放弃它的唯一原因） 新旧版本笔记不兼容，所以里面有两个编辑器 加密文件夹里面的笔记居然可以通过搜索直接显示！ 有些bug简直是feature了，5年不修：关机时提示“内存无法read”的错误，导致PC关机失败。（最新重构后的7.x版本才解决这个问题） 修bug很慢。反馈了之后很久没变化  优点：
 免费（我用的早，有25G空间了） 微信收藏 支持plantuml！ 稳定，没丢过数据  有道是我的主力笔记软件，2000多篇，800MB左右（所以3G空间其实也够用）
为知 缺点
 表格插入列的时候，鼠标上的提示有一定几率显示为“插入行” WizNote X 现在 md 笔记不需要添加.md 后缀了，但是在 app 上，md 格式的笔记如果没有 md 后缀，会直接以 md 语法的文本显示，不会渲染。手动添加.md 后缀正常渲染，但是手动添加的这个后缀在 PC 上是看不到的 笔记的格式不统一。单独的WizLite写的 md 虽然可以同步到一个账号，但是跟直接在WizNote X里面的笔记不同。网页剪藏的md笔记，会提示升级为md，但它本来就是md啊。反正为知笔记的格式我一直没太搞清楚。 app无法点开图片（即无法放大看） 反馈不通畅。邮件、官网的兔小巢、贴吧都反馈了bug，没有回复 产品很好，但是让我觉得要被放弃了  优点：
 60/年不贵 网页剪藏最厉害 微信收藏最厉害（有道需在app打开一下那个笔记才能收藏，否则内容就是个url。为知不用，微信发给公众号就行） 完美导入/导出md。完美指的是导入md时，能把图片上传到wiz服务器；导出时能把图片导出且和md文件同一文件夹 支持私有部署（私有部署不能使用网页收藏、微信收藏）  Joplin 缺点
 编辑器不行；虽然可以调用外部 Typora 打开，但是插入的图片不在 Joplin 的数据库里面 有个大纲插件，但是简陋：每次打开都占1/2宽的屏幕，即使调整了也记不住位置 没有微信收藏（现在公众号还是很多优质内容的）  优点：
 开源，稳定 可以导出md（但是其图片不是放在md文件同一目录，而是上级目录。所有md使用的图片混在一个目录） 支持私有部署（具备网页剪藏）  思源 缺点：]]></description>
</item><item>
    <title>使用Jekyll &#43; Github Pages搭建静态网站</title>
    <link>https://whuwangyong.github.io/2022-03-29-jekyll/</link>
    <pubDate>Tue, 29 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://whuwangyong.github.io/2022-03-29-jekyll/</guid>
    <description><![CDATA[今天折腾 hugo + stack 主题翻车了，然后就想着试试用Jekyll来搭建个人博客。
Jekyll 是 Github Pages 官方支持的静态网站生成工具，优点是在可以直接github上编辑md，提交后，github会承担生成html的工作。而使用hugo等工具，需要先在本地将md文件渲染成html，然后上传。
 hugo的优点是快！
 看了几个jekyll主题，发现 chirpy 最得我心。cotes2020/jekyll-theme-chirpy: A minimal, responsive, and powerful Jekyll theme for presenting professional writing (github.com)
本文记录Jekyll和chirpy的搭配使用。
安装Ruby和Jekyll jekyll也很麻烦，要安装的东西一大堆：
 Follow the instructions in the Jekyll Docs to complete the installation of Ruby, RubyGems, Jekyll, and Bundler.
   Download and install a Ruby+Devkit version from RubyInstaller Downloads. Use default options for installation.
  Run the ridk install step on the last stage of the installation wizard.]]></description>
</item><item>
    <title>Windows和Linux的不同换行符导致脚本执行异常</title>
    <link>https://whuwangyong.github.io/2022-03-13-linebreak-in-windows-and-linux/</link>
    <pubDate>Sun, 13 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://whuwangyong.github.io/2022-03-13-linebreak-in-windows-and-linux/</guid>
    <description><![CDATA[问题描述 有一个配置文件 config：
1 2  KAFKA_HOME=/home/wy/dev/kafka_2.13-2.6.0 BOOTSTRAP_SERVER=127.0.0.1:9092   另有一个使用该配置文件的脚本 list-topics.sh：
1 2 3 4  #!/bin/bash . config &#34;$KAFKA_HOME&#34;/bin/kafka-topics.sh --bootstrap-server &#34;$BOOTSTRAP_SERVER&#34; --list   我使用虚拟机Ubuntu挂载Windows分区，执行在Windows环境下编写的脚本，提示：
1 2  wy@ship:/mnt/hgfs/D/projects/kafka-mate/scripts$ ./list-topics.sh /bin/kafka-topics.sh: No such file or directory13-2.6.0   解决 找了好久的原因，最终注意到config文件的换行符编码为CRLF。
 三种换行符（line separator）：
 Windows：CRLF(\r\n) Unix and macOSLinux：LF(\n) CLassic Mac OS：CR(\r)，少见   改为LF后，脚本运行正常。我用的IDEA，在右下角更改：
vim状态栏的[noeol] [dos]是什么意思？ 当config的line separator问CRLF时，vim打开Windows分区上的文件时，状态栏显示[noeol][dos]：
当config的line separator问LF时，vim打开Windows分区上的文件时，状态栏显示[noeol]：
noeol：no end of line。
如果是Linux分区上的文件，且line separator为LF时，状态栏不会额外显示。
以下内容来自：Vim 编辑器底端 [noeol], [dos] 的含义 - Trekshot - 博客园 (cnblogs.]]></description>
</item><item>
    <title>shadowsocks 服务端安装指南</title>
    <link>https://whuwangyong.github.io/2022-03-09-shadowsocks/</link>
    <pubDate>Wed, 09 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://whuwangyong.github.io/2022-03-09-shadowsocks/</guid>
    <description><![CDATA[官方地址：
shadowsocks/shadowsocks-libev: Bug-fix-only libev port of shadowsocks. Future development moved to shadowsocks-rust (github.com)
旧地址，不再更新：
shadowsocks/shadowsocks at master (github.com)
clowwindy/shadowsocks-libev at master (github.com)
 本文基于Ubuntu。
install 1 2 3  $ sudo apt install shadowsocks-libev ... Created symlink /etc/systemd/system/multi-user.target.wants/shadowsocks-libev.service → /lib/systemd/system/shadowsocks-libev.service.   Configuration  官方文档说配置文件在这里：
Edit your config.json file. By default, it&rsquo;s located in /usr/local/etc/shadowsocks-libev.
但我的不是。
 编辑/etc/shadowsocks-libev/config.json
1 2 3 4 5 6 7 8  { &#34;server&#34;:&#34;0.0.0.0&#34;, &#34;mode&#34;:&#34;tcp_and_udp&#34;, &#34;server_port&#34;:your-port, &#34;password&#34;:&#34;your-pass&#34;, &#34;timeout&#34;:300, &#34;method&#34;:&#34;chacha20-ietf-poly1305&#34; }   mode有三种：tcp_only，udp_only，tcp_and_udp。]]></description>
</item><item>
    <title>V2Ray 搭建指南</title>
    <link>https://whuwangyong.github.io/2022-03-08-v2ray/</link>
    <pubDate>Tue, 08 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://whuwangyong.github.io/2022-03-08-v2ray/</guid>
    <description><![CDATA[所有的教程都不如官网。
 官网 官网：V2Fly.org
github：v2fly/v2ray-core: A platform for building proxies to bypass network restrictions. (github.com)
 以下是旧的官网和github：
 官网：Project V · Project V 官方网站 (v2ray.com) github：v2ray/v2ray-core: A platform for building proxies to bypass network restrictions. (github.com)  注意，旧版本的安装脚本已废弃。
 安装 使用Linux安装脚本：
v2fly/fhs-install-v2ray: Bash script for installing V2Ray in Linux that support systemd (github.com)
 该脚本在运行时会提供 info 和 error 等信息，请仔细阅读。
安装和更新 V2Ray 1 2  // 安装可执行文件和 .dat 数据文件 # bash &lt;(curl -L https://raw.]]></description>
</item></channel>
</rss>
